import type { NTACorporateInfoSearchMode } from '..';

import { expect, jest, test } from '@jest/globals';
import { KENALL } from '..';
import { buildAugmentedFetch } from '../fetch_shim';

jest.mock('../fetch_shim.js');

test.each([
  {
    response: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    },
    expected: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    },
  },
  {
    response: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        town: '麹町',
        block_lot_num: '3-12-14',
        building: '麹町駅前ヒルトップ',
        floor_room: '８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    },
    expected: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        town: '麹町',
        block_lot_num: '3-12-14',
        building: '麹町駅前ヒルトップ',
        floor_room: '８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    },
  },
  {
    response: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        town: '麹町',
        kyoto_street: '大宮通寺之内半丁下る東入',
        block_lot_num: '3-12-14',
        building: '麹町駅前ヒルトップ',
        floor_room: '８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    },
    expected: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        town: '麹町',
        kyoto_street: '大宮通寺之内半丁下る東入',
        block_lot_num: '3-12-14',
        building: '麹町駅前ヒルトップ',
        floor_room: '８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    },
  },
  {
    response: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: 0,
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        furigana: 'オープンコレクター',
        hihyoji: 0,
        kind: 301,
        name: '株式会社オープンコレクター',
        name_image_id: null,
        process: 12,
        published_date: '2021-08-31',
        sequence_number: 1394014,
        successor_corporate_number: null,
        update_date: '2021-01-12',
        qualified_invoice_issuer_number: 'T2021001052596',
        address: {
          jisx0402: '13101',
          postal_code: '1020083',
          prefecture: '東京都',
          prefecture_kana: null,
          prefecture_roman: 'Tokyo',
          city: '千代田区',
          city_kana: null,
          city_roman: null,
          street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
          town: '麹町',
          kyoto_street: '大宮通寺之内半丁下る東入',
          block_lot_num: '3-12-14',
          building: '麹町駅前ヒルトップ',
          floor_room: '８階',
        },
      },
    },
    expected: {
      version: '2021-09-15',
      data: {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        town: '麹町',
        kyoto_street: '大宮通寺之内半丁下る東入',
        block_lot_num: '3-12-14',
        building: '麹町駅前ヒルトップ',
        floor_room: '８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    },
  },
])('getNTACorporateInfo method', async ({ response, expected }) => {
  const mockFetch = jest.fn<ReturnType<typeof buildAugmentedFetch>>();
  jest.mocked(buildAugmentedFetch).mockReturnValue(mockFetch);
  mockFetch.mockResolvedValue({
    json: jest.fn<Response['json']>().mockResolvedValue(response),
  } as unknown as Response);
  const ka = new KENALL('key');
  const result = await ka.getNTACorporateInfo('0000000000000');
  expect(mockFetch).toHaveBeenCalledTimes(1);
  expect(mockFetch.mock.calls[0][0]).toBe('./houjinbangou/0000000000000');
  expect(mockFetch.mock.calls[0][1]).toStrictEqual({
    method: 'GET',
    headers: {},
    params: {},
  });
  expect(result).toEqual(expected);
});

test.each([
  {
    version: '2021-09-15',
    data: {
      address_image_id: null,
      address_outside: '',
      address_outside_image_id: null,
      assignment_date: '2015-10-05',
      change_cause: '',
      change_date: '2021-01-04',
      close_cause: null,
      close_date: null,
      corporate_number: '2021001052596',
      correct: 0,
      en_address_line: '',
      en_address_outside: '',
      en_name: '',
      furigana: 'オープンコレクター',
      hihyoji: 0,
      kind: 301,
      name: '株式会社オープンコレクター',
      name_image_id: null,
      process: 12,
      published_date: '2021-08-31',
      sequence_number: 1394014,
      successor_corporate_number: null,
      update_date: '2021-01-12',
      qualified_invoice_issuer_number: 'T2021001052596',
      address: {
        jisx0402: '13101',
        postal_code: '1020083',
        prefecture: '東京都',
        prefecture_kana: null,
        prefecture_roman: 'Tokyo',
        city: '千代田区',
        city_kana: null,
        city_roman: null,
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        town: '麹町',
        kyoto_street: '大宮通寺之内半丁下る東入',
        block_lot_num: '3-12-14',
        building: '麹町駅前ヒルトップ',
        floor_room: '８階',
      },
    },
  },
])('getNTACorporateInfo method with new API version', async (fixture) => {
  const mockFetch = jest.fn<ReturnType<typeof buildAugmentedFetch>>();
  jest.mocked(buildAugmentedFetch).mockReturnValue(mockFetch);
  mockFetch.mockResolvedValue({
    json: jest.fn<Response['json']>().mockResolvedValue(fixture),
  } as unknown as Response);
  const ka = new KENALL('key');
  const result = await ka.getNTACorporateInfo('0000000000000', '2024-01-01');
  expect(mockFetch).toHaveBeenCalledTimes(1);
  expect(mockFetch.mock.calls[0][0]).toBe('./houjinbangou/0000000000000');
  expect(mockFetch.mock.calls[0][1]).toStrictEqual({
    method: 'GET',
    headers: {
      'KenAll-API-Version': '2024-01-01',
    },
    params: {},
  });
  expect(result).toEqual(fixture);
});

test.each([
  {
    version: '2021-09-15',
    data: [
      {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    ],
    query: 'オープンコレクター',
    count: 1,
    offset: 0,
    limit: 1,
    facets: null,
  },
  {
    version: '2021-09-15',
    data: [
      {
        address_image_id: null,
        address_outside: '',
        address_outside_image_id: null,
        assignment_date: '2015-10-05',
        change_cause: '',
        change_date: '2021-01-04',
        city_name: '千代田区',
        close_cause: null,
        close_date: null,
        corporate_number: '2021001052596',
        correct: '0',
        en_address_line: '',
        en_address_outside: '',
        en_name: '',
        en_prefecture_name: 'Tokyo',
        furigana: 'オープンコレクター',
        hihyoji: '0',
        jisx0402: '13101',
        kind: '301',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        post_code: '1020083',
        prefecture_name: '東京都',
        process: '12',
        published_date: '2021-08-31',
        sequence_number: '1394014',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        town: '麹町',
        block_lot_num: '3-12-14',
        building: '麹町駅前ヒルトップ',
        floor_room: '８階',
        successor_corporate_number: null,
        update_date: '2021-01-12',
      },
    ],
    query: 'オープンコレクター',
    count: 1,
    offset: 0,
    limit: 1,
    facets: null,
  },
  {
    version: '2022-01-21',
    data: [
      {
        sequence_number: '1406173',
        corporate_number: '2021001052596',
        process: '12',
        correct: '0',
        update_date: '2021-01-12',
        change_date: '2021-01-04',
        name: '株式会社オープンコレクター',
        name_image_id: null,
        kind: '301',
        prefecture_name: '東京都',
        city_name: '千代田区',
        street_number: '麹町３丁目１２－１４麹町駅前ヒルトップ８階',
        address_image_id: null,
        jisx0402: '13101',
        post_code: '1020083',
        address_outside: '',
        address_outside_image_id: null,
        close_date: null,
        close_cause: null,
        successor_corporate_number: null,
        change_cause: '',
        assignment_date: '2015-10-05',
        en_name: '',
        en_address_line: '',
        en_address_outside: '',
        furigana: 'オープンコレクター',
        hihyoji: '0',
      },
    ],
    query:
      '(name:株式会社オープンコレクター  OR furigana:株式会社オープンコレクター )',
    count: 1,
    offset: 0,
    limit: 30,
    facets: null,
  },
])('searchNTACorporateInfo method', async (fixture) => {
  const mockFetch = jest.fn<ReturnType<typeof buildAugmentedFetch>>();
  jest.mocked(buildAugmentedFetch).mockReturnValue(mockFetch);
  mockFetch.mockResolvedValue({
    json: jest.fn<Response['json']>().mockResolvedValue(fixture),
  } as unknown as Response);
  const ka = new KENALL('key');
  const options = {
    query: 'オープンコレクター',
    mode: 'exact' as NTACorporateInfoSearchMode,
    limit: 1,
  };
  const result = await ka.searchNTACorporateInfo(options);
  expect(mockFetch).toHaveBeenCalledTimes(1);
  expect(mockFetch.mock.calls[0][0]).toBe('./houjinbangou');
  expect(mockFetch.mock.calls[0][1]).toStrictEqual({
    method: 'GET',
    headers: {},
    params: {
      q: 'オープンコレクター',
      mode: 'exact',
      limit: '1',
    },
  });
  expect(result).toEqual(fixture);
});
